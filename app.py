import streamlit as st
from submit_to_gsheet import submit_orders_to_sheet

# ---------- DATA ----------
categories = {"‡∏ï‡πâ‡∏°": 50, "‡∏ú‡∏±‡∏î": 45, "‡πÄ‡∏™‡πâ‡∏ô": 40, "‡∏Ç‡πâ‡∏≤‡∏ß‡∏Ñ‡∏•‡∏∏‡∏Å": 55}
meats = {"‡∏´‡∏°‡∏π": 0, "‡πÑ‡∏Å‡πà": 5, "‡πÄ‡∏ô‡∏∑‡πâ‡∏≠": 10, "‡∏ó‡∏∞‡πÄ‡∏•": 15}
toppings = {"‡πÑ‡∏Ç‡πà‡∏î‡∏≤‡∏ß": 10, "‡πÑ‡∏Ç‡πà‡πÄ‡∏à‡∏µ‡∏¢‡∏ß": 10, "‡πÑ‡∏Ç‡πà‡∏ï‡πâ‡∏°": 8}
sizes = {"‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤": 0, "‡∏û‡∏¥‡πÄ‡∏®‡∏©": 10}

# ---------- STATE ----------
if "step" not in st.session_state:
    st.session_state.step = "category"
if "orders" not in st.session_state:
    st.session_state.orders = []

# ---------- STEP: CATEGORY ----------
if st.session_state.step == "category":
    st.title("üçΩÔ∏è ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏≠‡∏≤‡∏´‡∏≤‡∏£")

    image_map = {
        "‡∏ï‡πâ‡∏°": "images/tom.jpg",
        "‡∏ú‡∏±‡∏î": "images/pad.jpg",
        "‡πÄ‡∏™‡πâ‡∏ô": "images/noodle.jpg",
        "‡∏Ç‡πâ‡∏≤‡∏ß‡∏Ñ‡∏•‡∏∏‡∏Å": "images/mixrice.jpg"
    }

    cols = st.columns(2)
    for i, (cat, price) in enumerate(categories.items()):
        with cols[i % 2]:
            st.image(image_map[cat], use_container_width=True)
            if st.button(f"{cat} ({price} ‡∏ö‡∏≤‡∏ó)", key=f"cat_{cat}"):
                st.session_state.temp = {
                    "‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà": cat,
                    "base_price": price
                }
                st.session_state.step = "meat"
                st.rerun()

# ---------- STEP: MEAT ----------
elif st.session_state.step == "meat":
    st.title(f"üç≥ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {st.session_state.temp['‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà']}")

    for meat, add_price in meats.items():
        if st.button(f"{meat} (+{add_price} ‡∏ö‡∏≤‡∏ó)"):
            st.session_state.temp["‡πÄ‡∏ô‡∏∑‡πâ‡∏≠"] = meat
            st.session_state.temp["meat_price"] = add_price
            st.session_state.step = "toppings"
            st.rerun()

# ---------- STEP: TOPPINGS ----------
elif st.session_state.step == "toppings":
    st.title("ü•ö ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡πá‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á")

    for topping, topping_price in toppings.items():
        if st.button(f'{topping} (+{topping_price} ‡∏ö‡∏≤‡∏ó)'):
            st.session_state.temp["‡∏ó‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á"] = topping
            st.session_state.temp["topping_price"] = topping_price
            st.session_state.step = "size"
            st.rerun()

# ---------- STEP: SIZE ----------
elif st.session_state.step == "size":
    st.markdown("<h2 style='font-size: 32px;'>üçö ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡∏≠‡∏≤‡∏´‡∏≤‡∏£</h2>", unsafe_allow_html=True)

    # CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô (‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏™‡πà)
    st.markdown("""
        <style>
        div.stButton > button {
            font-size: 24px;
            padding: 20px 36px;
            border-radius: 12px;
            width: 100%;
            background-color: #f0f0f0;
            color: black;
            border: 2px solid #888;
        }
        div.stButton > button:hover {
            background-color: #e0e0e0;
            border-color: #555;
        }
        </style>
    """, unsafe_allow_html=True)

    col1, col2 = st.columns(2)

    with col1:
        if st.button("‚úÖ ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤", key="btn_normal"):
            st.session_state.temp["‡∏Ç‡∏ô‡∏≤‡∏î"] = "‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤"
            st.session_state.temp["size_price"] = sizes["‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤"]

            total = (
                    st.session_state.temp["base_price"]
                    + st.session_state.temp["meat_price"]
                    + st.session_state.temp["topping_price"]
                    + st.session_state.temp["size_price"]
            )
            st.session_state.temp["‡∏£‡∏≤‡∏Ñ‡∏≤"] = total

            st.session_state.orders.append(st.session_state.temp)
            del st.session_state["temp"]
            st.session_state.step = "category"
            st.rerun()

    with col2:
        if st.button("‚ú® ‡∏û‡∏¥‡πÄ‡∏®‡∏© (+10 ‡∏ö‡∏≤‡∏ó)", key="btn_special"):
            st.session_state.temp["‡∏Ç‡∏ô‡∏≤‡∏î"] = "‡∏û‡∏¥‡πÄ‡∏®‡∏©"
            st.session_state.temp["size_price"] = sizes["‡∏û‡∏¥‡πÄ‡∏®‡∏©"]

            total = (
                    st.session_state.temp["base_price"]
                    + st.session_state.temp["meat_price"]
                    + st.session_state.temp["topping_price"]
                    + st.session_state.temp["size_price"]
            )
            st.session_state.temp["‡∏£‡∏≤‡∏Ñ‡∏≤"] = total

            st.session_state.orders.append(st.session_state.temp)
            del st.session_state["temp"]
            st.session_state.step = "category"
            st.rerun()

# ---------- STEP: SUMMARY ----------
st.sidebar.title("üßæ ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
total_all = 0
for i, order in enumerate(st.session_state.orders):
    with st.sidebar.expander(f"‡∏à‡∏≤‡∏ô {i+1} : {order['‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà']} + {order['‡πÄ‡∏ô‡∏∑‡πâ‡∏≠']}"):
        st.write(f"‡∏Ç‡∏ô‡∏≤‡∏î: {order['‡∏Ç‡∏ô‡∏≤‡∏î']}")
        st.write(f"‡∏ó‡πá‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á: {order.get('‡∏ó‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á', '-')}")
        st.write(f"‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏à‡∏≤‡∏ô‡∏ô‡∏µ‡πâ: {order['‡∏£‡∏≤‡∏Ñ‡∏≤']} ‡∏ö‡∏≤‡∏ó")
        total_all += order["‡∏£‡∏≤‡∏Ñ‡∏≤"]

st.sidebar.markdown(f"### üíµ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {total_all} ‡∏ö‡∏≤‡∏ó")

# ‚úÖ ‡∏õ‡∏∏‡πà‡∏° Submit ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
if len(st.session_state.orders) > 0:
    if st.sidebar.button("‚úÖ ‡∏™‡πà‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"):
        submit_orders_to_sheet(st.session_state.orders)
        st.success("‡∏™‡πà‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏õ Google Sheets ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß üéâ")
        st.write(st.session_state.orders)
        st.session_state.clear()
        st.rerun()